export const Node = (
  <pre className="p-4 overflow-x-auto font-mono mb-4" style="background-color: #292D3E">
<code><span style="display:block"><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> define interactionSignal handler in Express, Next.js, Hapi, Koa, Fastify, etc...</span></span>
<span style="display:block"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">mainWorkflow</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">userId</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">userInteracted</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">race</span><span style="color: #F07178">([</span></span>
<span style="display:block"><span style="color: #F07178">{"    "}</span><span style="color: #A6ACCD">interactionSignal</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> receive signals from users!</span></span>
<span style="display:block"><span style="color: #F07178">{"    "}</span><span style="color: #82AAFF">sleep</span><span style="color: #F07178">(</span><span style="color: #F78C6C">30</span><span style="color: #F07178"> </span><span style="color: #89DDFF">*</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">DAY</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> sleep for 30 days!</span></span>
<span style="display:block"><span style="color: #F07178">  ])</span><span style="color: #89DDFF">;</span></span>
<span style="display:block"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #89DDFF">!</span><span style="color: #A6ACCD">userInteracted</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #F07178">{"    "}</span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #82AAFF">sendEmailActivity</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">userId</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> timeouts + retries!</span></span>
<span style="display:block"><span style="color: #F07178">  </span><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> Scale to Millions + Write Tests + Encrypt Data + Migrate Versions + ... </span></span></code>
</pre>
);

export const Go = (
  <pre className="p-4 overflow-x-auto font-mono mb-4" style="background-color: #292D3E">
<code><span style="display:block"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">mainWorkflow</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">ctx workflow</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Context</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> userId</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">error</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">		</span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> ...</span></span>
<span style="display:block"><span style="color: #A6ACCD">		selector</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">AddReceive</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">signalChannel</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">func(</span><span style="color: #A6ACCD">c workflow</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">ReceiveChannel</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> more </span><span style="color: #C792EA">bool</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">				c</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Receive</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">ctx</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&amp;</span><span style="color: #A6ACCD">signalVal</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> receive user signals!</span></span>
<span style="display:block"><span style="color: #A6ACCD">		</span><span style="color: #89DDFF">})</span></span>
<span style="display:block"><span style="color: #A6ACCD">		timerFuture </span><span style="color: #89DDFF">:=</span><span style="color: #A6ACCD"> workflow</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">NewTimer</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">childCtx</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">30</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> time</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Day</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> sleep for 30 days!</span></span>
<span style="display:block"><span style="color: #A6ACCD">		selector</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">AddFuture</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">timerFuture</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">func(</span><span style="color: #A6ACCD">f workflow</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Future</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">				_ </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> workflow</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ExecuteActivity</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">ctx</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> SendEmailActivity</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">Get</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">ctx</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">nil)</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> timeouts and retries!</span></span>
<span style="display:block"><span style="color: #A6ACCD">		</span><span style="color: #89DDFF">})</span></span>
<span style="display:block"><span style="color: #A6ACCD">		</span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> Scale to Millions + Write Tests + Encrypt Data + Migrate Versions + ... </span></span>
<span style="display:block"><span style="color: #89DDFF">{"}"}</span></span></code>
  </pre>
);
export const Java = (
  <pre className="p-4 overflow-x-auto " style="background-color: #292D3E">
<code><span style="display:block"><span style="color: #C792EA">public</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">class</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">SampleWorkflow</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">  </span><span style="color: #C792EA">public</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">void</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">main</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">String</span><span style="color: #89DDFF">[]</span><span style="color: #A6ACCD"> args</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #89DDFF">{"    "}</span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> ...</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}WorkflowClient</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">start</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">workflow</span><span style="color: #89DDFF; font-style: italic">::</span><span style="color: #A6ACCD">initWorkflow</span><span style="color: #89DDFF">);</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}Workflow</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sleep</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">Duration</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ofDays</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">30</span><span style="color: #89DDFF">));</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> sleep for 30 days!</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}workflow</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">waitForName</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UserInteraction</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> block on signals from users!</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}workflow</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sendEmail</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">userId</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> timeouts + retries!</span></span>
<span style="display:block"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"><span style="color: #89DDFF">  </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> Scale to Millions + Write Tests + Encrypt Data + Migrate Versions + ... </span></span>
<span style="display:block"><span style="color: #89DDFF">{"}"}</span></span></code>
  </pre>
);
export const PHP = (
  <pre className="p-4 overflow-x-auto " style="background-color: #292D3E">
   <code><span style="display:block"><span style="color: #C792EA">class</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">MainWorkflow</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">implements</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">MainWorkflowInterface</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}</span><span style="color: #C792EA">private</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">bool</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">value </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">false;</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}</span><span style="color: #C792EA">public</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">main</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">userID</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}{"    "}</span><span style="color: #89DDFF; font-style: italic">yield</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Workflow</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">await</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">fn</span><span style="color: #89DDFF">()=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$this-&gt;</span><span style="color: #A6ACCD">value</span><span style="color: #89DDFF">);</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> wait for $value to become true</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}{"    "}</span><span style="color: #89DDFF; font-style: italic">yield</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Workflow</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">timer</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">2592000</span><span style="color: #89DDFF">);</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> sleep for 30 days!</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}{"    "}</span><span style="color: #89DDFF; font-style: italic">yield</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$this-&gt;</span><span style="color: #A6ACCD">user</span><span style="color: #89DDFF">-&gt;</span><span style="color: #82AAFF">sendEmail</span><span style="color: #89DDFF">($</span><span style="color: #A6ACCD">userID</span><span style="color: #89DDFF">);</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> timeouts + retries!</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}</span><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}</span><span style="color: #C792EA">public</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">userSignal</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">bool</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">value</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}{"    "}</span><span style="color: #89DDFF">$this-&gt;</span><span style="color: #A6ACCD">value </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">value</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> receive signals from users!</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}</span><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"><span style="color: #89DDFF">&lt;!--</span><span style="color: #A6ACCD"> Scale to Millions </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> Write Tests </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> Encrypt Data </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> Migrate Versions </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">...</span><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">--&gt;</span></span>
<span style="display:block"><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"></span></code>
  </pre>
);

// prettier-ignore-end