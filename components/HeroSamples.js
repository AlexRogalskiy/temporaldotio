export const Node = (
  <pre className="p-4 overflow-x-auto font-mono mb-4" style="background-color: #292D3E">
<code><span style="display:block"><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">main</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">userId</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">intervals</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> [</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #F78C6C">7</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #F78C6C">30</span><span style="color: #F07178">]</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> Nag user until giving up</span></span>
<span style="display:block"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #F07178"> (</span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">interval</span><span style="color: #F07178"> </span><span style="color: #89DDFF">of</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">intervals</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #F07178">{"    "}</span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #82AAFF">sleep</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">interval</span><span style="color: #F07178"> </span><span style="color: #89DDFF">*</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">DAYS</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span style="display:block"><span style="color: #F07178">{"    "}</span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">activities</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sendUserRetentionEmail</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">interval</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">userId</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> automatic timeouts + retries</span></span>
<span style="display:block"><span style="color: #F07178">  </span><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"><span style="color: #89DDFF">  </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> we can signal or cancel the workflow if the user does an action</span></span>
<span style="display:block"><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"></span></code>
</pre>
);

export const Go = (
  <pre className="p-4 overflow-x-auto font-mono mb-4" style="background-color: #292D3E">
<code><span style="display:block"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">mainWorkflow</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">ctx workflow</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Context</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> userId </span><span style="color: #C792EA">string</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">error</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">	</span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> ...</span></span>
<span style="display:block"><span style="color: #A6ACCD">	intervals </span><span style="color: #89DDFF">:=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">]</span><span style="color: #C792EA">int</span><span style="color: #89DDFF">{"{"}</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">7</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">30</span><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> _</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> interval </span><span style="color: #89DDFF">:=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">range</span><span style="color: #A6ACCD"> intervals </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">		time</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Sleep</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">interval </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> time</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Day</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">{"    "}{"    "}{"    "}{"    "}{"    "}{"    "}{"    "}{"    "}{"    "}{"    "}{"    "}{"    "}{"    "}{"    "}   </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> sleep for days!</span></span>
<span style="display:block"><span style="color: #A6ACCD">		_ </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> workflow</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ExecuteActivity</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">ctx</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> SendUserRetentionEmail</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> userId</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> interval</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">Get</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">ctx</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">nil)</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> timeouts and retries!</span></span>
<span style="display:block"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">	</span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> we can signal or cancel the workflow if the user does an action</span></span>
<span style="display:block"><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"></span></code>
  </pre>
);
export const Java = (
  <pre className="p-4 overflow-x-auto " style="background-color: #292D3E">
<code><span style="display:block"></span>
<span style="display:block"><span style="color: #C792EA">public</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">class</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">MainWorkflowImpl</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">implements</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">MainWorkflow</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}</span><span style="color: #C792EA">public</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">void</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">PollUser</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">String</span><span style="color: #89DDFF">[]</span><span style="color: #A6ACCD"> args</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}  </span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> intervals</span><span style="color: #89DDFF">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">7</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">30</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">};</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}  </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> interval</span><span style="color: #89DDFF; font-style: italic">:</span><span style="color: #A6ACCD"> intervals</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span><span style="color: #A6ACCD">   </span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}{"    "}Workflow</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sleep</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">Duration</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ofDays</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">interval</span><span style="color: #89DDFF">));</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> sleep for days!</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}{"    "}activities</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sendUserRetentionEmail</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">interval</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> userId</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> automatic timeouts + retries!</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}  </span><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"><span style="color: #89DDFF">{"    "}  </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> we can signal or cancel the workflow if the user does an action</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}</span><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"><span style="color: #89DDFF">{"}"}</span></span></code>
  </pre>
);
export const PHP = (
  <pre className="p-4 overflow-x-auto " style="background-color: #292D3E">
<code><span style="display:block"><span style="color: #C792EA">public</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">main</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">userID</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}</span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">intervals </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">array</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">7</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">30</span><span style="color: #89DDFF">);</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}</span><span style="color: #89DDFF; font-style: italic">foreach</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">($</span><span style="color: #A6ACCD">intervals </span><span style="color: #89DDFF">as</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">&amp;</span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">interval</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{"{"}</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}{"    "}</span><span style="color: #89DDFF; font-style: italic">yield</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Workflow</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">timer</span><span style="color: #89DDFF">($</span><span style="color: #A6ACCD">interval </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> DAYS</span><span style="color: #89DDFF">);</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> sleep for days!</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}{"    "}</span><span style="color: #89DDFF; font-style: italic">yield</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$this-&gt;</span><span style="color: #A6ACCD">user</span><span style="color: #89DDFF">-&gt;</span><span style="color: #82AAFF">sendEmail</span><span style="color: #89DDFF">($</span><span style="color: #A6ACCD">interval</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">userID</span><span style="color: #89DDFF">);</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> timeouts + retries!</span></span>
<span style="display:block"><span style="color: #A6ACCD">{"    "}</span><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"><span style="color: #89DDFF">{"    "}</span><span style="color: #676E95; font-style: italic">//</span><span style="color: #90EE90; font-style: italic"> we can signal or cancel the workflow if the user does an action</span></span>
<span style="display:block"><span style="color: #89DDFF">{"}"}</span></span>
<span style="display:block"></span></code>
  </pre>
);

// prettier-ignore-end